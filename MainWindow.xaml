<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Proiect"
        xmlns:BookLotModel="clr-namespace:BookLotModel;assembly=BookLotModel" x:Class="Proiect.MainWindow"
        mc:Ignorable="d"
        Title="E-BookStore" FontStyle="Italic" FontFamily="Courier New,monospace" Background="#FF613F3F" Height="450" Width="1000" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="clientViewSource" d:DesignSource="{d:DesignInstance {x:Type BookLotModel:Client}, CreateList=True}"/>
        <CollectionViewSource x:Key="depositViewSource" d:DesignSource="{d:DesignInstance {x:Type BookLotModel:Deposit}, CreateList=True}"/>
        <CollectionViewSource x:Key="clientOrdersViewSource" Source="{Binding Orders, Source={StaticResource clientViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">*</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="gbOperations" TargetType="Button">
            <Setter Property="Background" Value="#FFDEB995"/>
            <Setter Property="FontFamily" Value="Courier New, monospace"/>
        </Style>
        <Style x:Key="gbActions" TargetType="Button">
            <Setter Property="Background" Value="#FFDEB995"/>
            <Setter Property="FontFamily" Value="Courier New, monospace"/>
        </Style>
    </Window.Resources>
    <Grid Margin="244,0,0,0">
        <TabControl x:Name="tblCtrlBookLot" HorizontalAlignment="Left" Height="334" Margin="42,47,0,0" VerticalAlignment="Top" Width="693">
            <TabItem Header="Clients">
                <Grid Background="RosyBrown" DataContext="{StaticResource clientViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="79*"/>
                        <ColumnDefinition Width="608*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="clientDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="175,43,34,161" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="1">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="clientIdColumn" Binding="{Binding ClientId}" Header="Client Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="addressColumn" Binding="{Binding Address}" Header="Address" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="emailColumn" Binding="{Binding Email}" Header="Email" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="phoneNumberColumn" Binding="{Binding PhoneNumber}" Header="Phone Number" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="255.48,175,0,0" VerticalAlignment="Top" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Client Id:" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="-75,-22,0,0"/>
                        <TextBox x:Name="clientIdTextBox" HorizontalAlignment="Left" Height="24" Margin="-76,0,0,0" Grid.Row="0" Text="{Binding ClientId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Top" Width="120" IsEnabled="False" Grid.RowSpan="3"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="-75,20,0,0" Grid.Row="1" VerticalAlignment="Top" Grid.RowSpan="2"/>
                        <TextBox x:Name="firstNameTextBox" HorizontalAlignment="Left" Height="23" Margin="-76,43,0,0" Grid.Row="2" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Top" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Last Name:" HorizontalAlignment="Left" Margin="-75,67,0,0" Grid.Row="2" VerticalAlignment="Top"/>
                        <TextBox x:Name="lastNameTextBox" HorizontalAlignment="Left" Height="23" Margin="-75,90,0,0" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Top" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}" Grid.ColumnSpan="2" />
                        <Label Content="Address:" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="57,-22,0,0" Grid.RowSpan="3"/>
                        <TextBox x:Name="addressTextBox" HorizontalAlignment="Left" Height="24" Margin="54,0,-104,0" Grid.Row="0" Text="{Binding Address, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Top" Width="226" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}" Grid.RowSpan="3" Grid.Column="1"/>
                        <Label Content="Email:" Grid.Column="1" HorizontalAlignment="Left" Margin="57,20,0,0" Grid.Row="1" VerticalAlignment="Top" Grid.RowSpan="2"/>
                        <TextBox x:Name="emailTextBox" HorizontalAlignment="Left" Height="23" Margin="54,43,-104,0" Grid.Row="2" Text="{Binding Email, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Top" Width="226" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}" Grid.Column="1"/>
                        <Label Content="Phone Number:" HorizontalAlignment="Left" Margin="56,67,0,0" Grid.Row="2" VerticalAlignment="Top" Grid.Column="1"/>
                        <TextBox x:Name="phoneNumberTextBox" HorizontalAlignment="Left" Height="23" Margin="56,90,0,0" Grid.Row="2" Text="{Binding PhoneNumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Top" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}" Grid.Column="1" />
                    </Grid>
                    <Image Margin="29,82,458,90" Source="Clients.png" Width="200" Stretch="Fill" Grid.ColumnSpan="2"/>
                </Grid>
            </TabItem>
            <TabItem Header="Deposit">
                <Grid Background="RosyBrown" DataContext="{StaticResource depositViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="16*"/>
                        <ColumnDefinition Width="33*"/>
                        <ColumnDefinition Width="109*"/>
                        <ColumnDefinition Width="529*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="depositDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="70,43,30,161" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="3">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="bookIdColumn" Binding="{Binding BookId}" Header="Book Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="authorColumn" Binding="{Binding Author}" Header="Author" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="titleColumn" Binding="{Binding Title}" Header="Title" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="publishingHouseColumn" Binding="{Binding PublishingHouse}" Header="PublishingHouse" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="priceColumn" Binding="{Binding Price}" Header="Price" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid2" HorizontalAlignment="Left" Margin="146,175,0,0" VerticalAlignment="Top" Grid.Column="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="142"/>
                            <ColumnDefinition Width="40"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="14"/>
                            <RowDefinition Height="16"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="1"/>
                        </Grid.RowDefinitions>
                        <Label Content="Book Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="-57,-15,0,5" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="bookIdTextBox" HorizontalAlignment="Left" Height="22" Margin="-57,7,0,1" Grid.Row="0" Text="{Binding BookId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" IsEnabled="False" Width="120" Grid.RowSpan="2"/>
                        <Label Content="Author:" Grid.Column="0" HorizontalAlignment="Left" Margin="-59,5,0,37" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="authorTextBox" HorizontalAlignment="Left" Height="22" Margin="-57,27,0,17" Grid.Row="2" Text="{Binding Author, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Title:" HorizontalAlignment="Left" Margin="-57,53,0,19" Grid.Row="2" VerticalAlignment="Center" RenderTransformOrigin="2.868,1.708" Grid.RowSpan="2"/>
                        <TextBox x:Name="titleTextBox" HorizontalAlignment="Left" Height="22" Margin="-57,9,0,0" Grid.Row="3" Text="{Binding Title, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.RowSpan="2"/>
                        <Label Content="PublishingHouse:" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="47,-13,0,0" Grid.ColumnSpan="2"/>
                        <TextBox x:Name="publishingHouseTextBox" HorizontalAlignment="Left" Height="24" Margin="47,7,-91,0" Text="{Binding PublishingHouse, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Top" Width="226" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}" Grid.Column="1" Grid.ColumnSpan="2" Grid.RowSpan="3"/>
                        <Label Content="Price:" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="47,10,0,0" Grid.Row="2"/>
                        <TextBox x:Name="priceTextBox" HorizontalAlignment="Left" Height="24" Margin="47,30,-91,0" Text="{Binding Price, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Top" Width="226" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2"/>
                    </Grid>
                    <Image Height="180" Width="180" Margin="4,108,487,20" Source="Bookshelf.jpg" Stretch="Fill" Grid.ColumnSpan="3" Grid.Column="1"/>
                </Grid>
            </TabItem>
            <TabItem Header="Orders" RenderTransformOrigin="1.153,5.1">
                <Grid Background="RosyBrown" DataContext="{StaticResource clientOrdersViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="21*"/>
                        <ColumnDefinition Width="55*"/>
                        <ColumnDefinition Width="9*"/>
                        <ColumnDefinition Width="13*"/>
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition Width="8*"/>
                        <ColumnDefinition Width="578*"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox x:Name="cmbClients" HorizontalAlignment="Left" Margin="146,208,0,0" VerticalAlignment="Top" Width="402" SelectedValue="{Binding ElementName=ordersDataGrid,Path=SelectedItem.ClientId,Mode=OneWay}" Grid.Column="6" Height="23">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1} - {2} - {3} - {4}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                            <Binding Path="Address"/>
                                            <Binding Path="Email"/>
                                            <Binding Path="PhoneNumber"/>

                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label Content="Client" HorizontalAlignment="Left" Margin="146,183,0,0" VerticalAlignment="Top" Height="25" Width="99" Grid.Column="6"/>
                    <DataGrid x:Name="ordersDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}"  Margin="146,65,30,139" RowDetailsVisibilityMode="VisibleWhenSelected" IsSynchronizedWithCurrentItem="True" Grid.Column="6">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="OrderId" Binding="{Binding OrderId}" Header="OrderId" Width="SizeToHeader"/>

                            <DataGridTextColumn x:Name="TitleColumn" Binding="{Binding Title}" Header="BookTitle" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="AuthorColumn" Binding="{Binding Author}" Header="Author" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="PublishingHouse" Binding="{Binding PublishingHouse}" Header="PublishingHouse" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="Quantity" Binding="{Binding Quantity}" Header="Quantity" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="Code" Binding="{Binding Code}" Header="Code" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="Text" Binding="{Binding Text}" Header="Text" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="Value" Binding="{Binding Value}" Header="Value" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="NumberOfUses" Binding="{Binding NumberOfUses}" Header="NumberOfUses" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="Total" Binding="{Binding Total}" Header="Total" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Image Margin="34,93,482,55" Height="160" Width="150" Source="orders.png" Stretch="Fill" Grid.ColumnSpan="6" Grid.Column="1"/>
                    <Label Grid.Column="6" Content="Order content" HorizontalAlignment="Left" Margin="146,40,0,0" VerticalAlignment="Top"/>
                </Grid>
            </TabItem>
        </TabControl>
        <GroupBox x:Name="gbOperations" BorderThickness="0" Button.Click="gbOperations_Click" Header="" HorizontalAlignment="Left" Height="104" Margin="-188,65,0,0" VerticalAlignment="Top" Width="174">
            <StackPanel HorizontalAlignment="Left" Height="100" Margin="29,1,0,-18" VerticalAlignment="Top" Width="100">
                <Button x:Name="btnNew" Content="New" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnNew_Click" Style="{StaticResource gbOperations}"/>
                <Button x:Name="btnEdit" Content="Edit" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnEditO_Click" Style="{StaticResource gbOperations}"/>
                <Button x:Name="btnDelete" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnDeleteO_Click" Style="{StaticResource gbOperations}"/>
            </StackPanel>
        </GroupBox>
        <GroupBox x:Name="gbActions" BorderThickness="0" Header="" HorizontalAlignment="Left" Height="101" Margin="-188,214,0,0" VerticalAlignment="Top" Width="125"/>
        <StackPanel HorizontalAlignment="Left" Height="100" Margin="-153,226,0,0" VerticalAlignment="Top" Width="100">
            <Button x:Name="btnCancel" Content="Cancel" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnCancel_Click" Style="{StaticResource gbActions}"/>
            <Button x:Name="btnPrev" Content="Previous" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnPrevious_Click" Style="{StaticResource gbActions}"/>
            <Button x:Name="btnNext" Content="Next" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnNext_Click" Style="{StaticResource gbActions}"/>
            <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnSave_Click">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource gbActions}">
                        <Setter Property="IsEnabled" Value="false" />
                        <Style.Triggers>
                            <!--Butonul Save va fi inactiv daca exista erori de validare -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=firstNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="true" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
    </Grid>
</Window>
